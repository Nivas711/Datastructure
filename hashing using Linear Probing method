#include <stdio.h>
#define SIZE 10

int hashTable[SIZE];

void initTable() {
    for (int i = 0; i < SIZE; i++)
        hashTable[i] = -1;
}

int hash(int key) {
    return key % SIZE;
}

void insert(int key) {
    int index = hash(key);
    int i = 0;

    while (hashTable[(index + i) % SIZE] != -1 && i < SIZE) {
        i++;
    }

    if (i == SIZE) {
        printf("Hash table is full. Cannot insert %d\n", key);
        return;
    }

    hashTable[(index + i) % SIZE] = key;
}

void display() {
    printf("Hash Table:\n");
    for (int i = 0; i < SIZE; i++) {
        if (hashTable[i] != -1)
            printf("Index %d: %d\n", i, hashTable[i]);
        else
            printf("Index %d: empty\n", i);
    }
}

int main() {
    initTable();

    insert(23);
    insert(43);
    insert(13);
    insert(27);
    insert(37);

    display();

    return 0;
}
